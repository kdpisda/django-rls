name: Deploy Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'documentations/**'
      - '.github/workflows/deploy-docs.yml'
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  # Custom domain for the documentation
  DOCS_DOMAIN: django-rls.com

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      docs-changed: ${{ steps.filter.outputs.docs }}
      checksum: ${{ steps.checksum.outputs.checksum }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Check for documentation changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            docs:
              - 'documentations/**'
              - '.github/workflows/deploy-docs.yml'
      
      - name: Calculate documentation checksum
        id: checksum
        if: steps.filter.outputs.docs == 'true'
        run: |
          # Calculate checksum of all documentation files
          CHECKSUM=$(find documentations -type f -name "*.md" -o -name "*.js" -o -name "*.json" -o -name "*.css" | 
                     sort | xargs cat | sha256sum | cut -d' ' -f1)
          echo "checksum=$CHECKSUM" >> $GITHUB_OUTPUT
          echo "Documentation checksum: $CHECKSUM"

  build:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.docs-changed == 'true'
    defaults:
      run:
        working-directory: documentations
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: documentations/package-lock.json
      
      - name: Cache Docusaurus build
        uses: actions/cache@v4
        with:
          path: |
            documentations/.docusaurus
            documentations/build
          key: ${{ runner.os }}-docusaurus-build-${{ needs.check-changes.outputs.checksum }}
          restore-keys: |
            ${{ runner.os }}-docusaurus-build-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build website
        run: npm run build
        env:
          # Ensure the CNAME file is included
          DEPLOYMENT_BRANCH: gh-pages
      
      - name: Create deployment info
        run: |
          echo "Built at: $(date)" > build/build-info.txt
          echo "Commit: ${{ github.sha }}" >> build/build-info.txt
          echo "Checksum: ${{ needs.check-changes.outputs.checksum }}" >> build/build-info.txt
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: documentations/build

  deploy:
    environment:
      name: github-pages
      url: https://${{ env.DOCS_DOMAIN }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Verify deployment
        run: |
          echo "Documentation deployed to: https://${{ env.DOCS_DOMAIN }}"
          echo "Deployment ID: ${{ steps.deployment.outputs.page_id }}"
          
          # Wait for deployment to propagate
          sleep 30
          
          # Check if site is accessible
          curl -f -s -o /dev/null https://${{ env.DOCS_DOMAIN }} || {
            echo "Warning: Site not immediately accessible. DNS propagation may take time."
          }